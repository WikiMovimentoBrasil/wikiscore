# Generated by Django 4.2.15 on 2024-08-22 14:16

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('articleID', models.IntegerField()),
                ('title', models.TextField()),
                ('active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Contest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_id', models.CharField(max_length=30, unique=True)),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('name', models.TextField()),
                ('revert_time', models.SmallIntegerField(default=24)),
                ('official_list_pageid', models.IntegerField()),
                ('category_pageid', models.IntegerField(blank=True, null=True)),
                ('category_petscan', models.IntegerField(blank=True, null=True)),
                ('endpoint', models.URLField()),
                ('api_endpoint', models.URLField()),
                ('outreach_name', models.TextField()),
                ('campaign_event_id', models.IntegerField(blank=True, default=None, null=True)),
                ('bytes_per_points', models.IntegerField(default=3000)),
                ('max_bytes_per_article', models.IntegerField(default=90000)),
                ('minimum_bytes', models.IntegerField(blank=True, null=True)),
                ('pictures_per_points', models.SmallIntegerField(default=5)),
                ('pictures_mode', models.SmallIntegerField(default=0)),
                ('max_pic_per_article', models.SmallIntegerField(blank=True, null=True)),
                ('theme', models.TextField()),
                ('color', models.TextField(blank=True, default='')),
                ('started_update', models.DateTimeField(blank=True, null=True)),
                ('finished_update', models.DateTimeField(blank=True, null=True)),
                ('next_update', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Edit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('diff', models.IntegerField()),
                ('timestamp', models.DateTimeField(blank=True)),
                ('user_id', models.IntegerField()),
                ('orig_bytes', models.IntegerField(blank=True, default=0)),
                ('new_page', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Evaluation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valid_edit', models.BooleanField(default=False)),
                ('pictures', models.SmallIntegerField(default=0)),
                ('real_bytes', models.IntegerField(blank=True, default=0)),
                ('status', models.CharField(choices=[('0', 'Pending'), ('1', 'Done'), ('2', 'Hold'), ('3', 'Skipped')], default='0', max_length=1)),
                ('when', models.DateTimeField(auto_now_add=True)),
                ('obs', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Evaluator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_status', models.CharField(default='P', max_length=1)),
                ('contest', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contests.contest')),
            ],
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Participant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.CharField(max_length=100)),
                ('timestamp', models.DateTimeField(blank=True)),
                ('global_id', models.IntegerField()),
                ('local_id', models.IntegerField(blank=True)),
                ('attached', models.DateTimeField(blank=True)),
                ('contest', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contests.contest')),
            ],
        ),
        migrations.CreateModel(
            name='Qualification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('0', 'Reverted'), ('1', 'Active')], default='1', max_length=1)),
                ('when', models.DateTimeField(auto_now_add=True)),
                ('contest', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contests.contest')),
                ('diff', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contests.edit')),
                ('evaluator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='contests.evaluator')),
            ],
        ),
        migrations.CreateModel(
            name='ParticipantEnrollment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enrolled', models.BooleanField(default=True)),
                ('when', models.DateTimeField(auto_now_add=True)),
                ('contest', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contests.contest')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contests.participant')),
            ],
        ),
    ]
